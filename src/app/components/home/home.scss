// src/app/components/home/home.component.scss

// Container for the entire home page
.home-container {
  min-height: 100vh; // Full viewport height
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); // Beautiful gradient
  color: white; // White text on gradient background
  padding: 2rem; // Consistent padding
  
  // Responsive design for mobile
  @media (max-width: 768px) {
    padding: 1rem; // Less padding on mobile
  }
}

// Hero section at the top
.hero-section {
  text-align: center; // Center-aligned text
  padding: 4rem 0; // Vertical padding
  max-width: 800px; // Limit width for readability
  margin: 0 auto; // Center the section
}

// Main title styling
.main-title {
  font-size: 3.5rem; // Large, bold title
  font-weight: 700; // Bold font weight
  margin-bottom: 1rem; // Space below title
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3); // Subtle shadow
  
  // Responsive font size
  @media (max-width: 768px) {
    font-size: 2.5rem; // Smaller on mobile
  }
}

// Subtitle styling
.subtitle {
  font-size: 1.2rem; // Medium text size
  opacity: 0.9; // Slightly transparent
  margin-bottom: 2rem; // Space below subtitle
  max-width: 600px; // Limit width
  margin-left: auto; // Center alignment
  margin-right: auto; // Center alignment
}

// Loading spinner for future use
.loading-spinner {
  display: inline-block; // Inline display
  padding: 1rem; // Padding around text
  background: rgba(255, 255, 255, 0.1); // Semi-transparent background
  border-radius: 8px; // Rounded corners
  backdrop-filter: blur(10px); // Glass effect
}

// Main content area
.main-content {
  max-width: 1200px; // Limit content width
  margin: 0 auto; // Center content
}

// Grid layout for features
.feature-grid {
  display: grid; // CSS Grid layout
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); // Responsive columns
  gap: 2rem; // Space between cards
  margin-bottom: 4rem; // Space below grid
}

// Individual feature cards
.feature-card {
  background: rgba(255, 255, 255, 0.1); // Semi-transparent white
  backdrop-filter: blur(10px); // Glass morphism effect
  border-radius: 12px; // Rounded corners
  padding: 2rem; // Internal padding
  text-align: center; // Center-aligned text
  transition: transform 0.3s ease, box-shadow 0.3s ease; // Smooth animations
  border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border
  
  // Hover effects
  &:hover {
    transform: translateY(-5px); // Lift card on hover
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2); // Shadow on hover
  }
  
  // Feature card headings
  h3 {
    font-size: 1.4rem; // Medium heading size
    margin-bottom: 1rem; // Space below heading
    font-weight: 600; // Semi-bold
  }
  
  // Feature card descriptions
  p {
    opacity: 0.8; // Slightly transparent text
    line-height: 1.5; // Better line spacing
  }
}

// Call-to-action section
.cta-section {
  text-align: center; // Center-aligned
  padding: 3rem; // Internal padding
  background: rgba(255, 255, 255, 0.05); // Very subtle background
  border-radius: 16px; // Rounded corners
  backdrop-filter: blur(10px); // Glass effect
  
  // CTA heading
  h2 {
    font-size: 2.2rem; // Large heading
    margin-bottom: 1rem; // Space below
    font-weight: 600; // Semi-bold
  }
  
  // CTA description
  p {
    font-size: 1.1rem; // Medium text
    opacity: 0.8; // Slightly transparent
    margin-bottom: 2rem; // Space below
  }
}

// Call-to-action button
.cta-button {
  background: linear-gradient(45deg, #ff6b6b, #ee5a24); // Gradient background
  color: white; // White text
  border: none; // No border
  padding: 1rem 2rem; // Button padding
  font-size: 1.1rem; // Button text size
  font-weight: 600; // Semi-bold text
  border-radius: 50px; // Pill-shaped button
  cursor: pointer; // Pointer cursor on hover
  transition: all 0.3s ease; // Smooth animations
  box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4); // Button shadow
  
  // Hover effects
  &:hover {
    transform: translateY(-2px); // Lift button
    box-shadow: 0 8px 25px rgba(255, 107, 107, 0.6); // Stronger shadow
  }
  
  // Active/pressed state
  &:active {
    transform: translateY(0); // Reset lift
  }
}